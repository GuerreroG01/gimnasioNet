// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gimnasioNet.Models;

#nullable disable

namespace gimnasioNet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Fechas_Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaPagoA")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("DATE");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("fechas_usuario");
                });

            modelBuilder.Entity("Usuarios", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Codigo");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Fechas_Usuario", b =>
                {
                    b.HasOne("Usuarios", "Usuarios")
                        .WithMany("FechasUsuario")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Usuarios", b =>
                {
                    b.Navigation("FechasUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
